on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t akademiazadan/akademiazadan:latest .

      - name: Push Docker image to Docker Hub
        run: |
          docker push akademiazadan/akademiazadan:latest

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

      - name: Configure SSH to prevent timeout
        run: |
          echo "Host *" >> ~/.ssh/config
          echo "  ServerAliveInterval 60" >> ~/.ssh/config
          echo "  ServerAliveCountMax 5" >> ~/.ssh/config

- name: Pull latest Docker image and restart container on VPS
  env:
    DOCKER_HUB_LOGIN: ${{ secrets.DOCKER_HUB_LOGIN }}
    DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  run: |
    ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
      echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_LOGIN --password-stdin &&
      docker pull akademiazadan/akademiazadan:latest &&
      if docker ps -a --format '{{.Names}}' | grep -q '^akademia-zadan-web$'; then
        docker stop akademia-zadan-web || true &&
        docker rm akademia-zadan-web || true
      fi &&
      docker run -d --name akademia-zadan-web -p 3000:3000 akademiazadan/akademiazadan:latest
    "
      - name: Cleanup
        run: rm -rf ~/.ssh
